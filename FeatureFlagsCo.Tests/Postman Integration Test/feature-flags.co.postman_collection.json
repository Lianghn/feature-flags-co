{
	"info": {
		"_postman_id": "6fca63cb-b189-4c33-925d-8f21c750341c",
		"name": "feature-flags.co",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Multi Option Variation Test",
			"item": [
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('#########LOGIN STARTED#######');\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"pm.collectionVariables.set(\"token\", jsonData.token);\r",
									"\r",
									"console.log(jsonData);\r",
									"tests[\"name = \" + jsonData.token] = true;\r",
									"\r",
									"pm.test(\"Body matches string\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"token\");\r",
									"});\r",
									"\r",
									"console.log('#########LOGIN END#######');"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"hu-beau@outlook.com\",\r\n  \"password\": \"@nlc0ccmb\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apihost}}/api/Authenticate/login",
							"host": [
								"{{apihost}}"
							],
							"path": [
								"api",
								"Authenticate",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Feature Flag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"var flagName = \"flag\" + new Date().getTime();\r",
									"pm.environment.set(\"flag-name\", flagName);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('#########Create feature flag STARTED#######');\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"pm.collectionVariables.set(\"featureFlagId\", jsonData.id);\r",
									"\r",
									"console.log('#########Create feature flag END#######');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"{{flag-name}}\",\r\n  \"environmentId\": {{environmentId}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apihost}}/FeatureFlags/CreateFeatureFlag",
							"host": [
								"{{apihost}}"
							],
							"path": [
								"FeatureFlags",
								"CreateFeatureFlag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Feature Flag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('#########Get feature flag STARTED#######');\r",
									"\r",
									"pm.test(\"Successful Get request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.collectionVariables.set(\"featureFlagName\", jsonData.ff.name);\r",
									"pm.collectionVariables.set(\"featureFlagKeyName\", jsonData.ff.keyName);\r",
									"\r",
									"console.log('#########Create feature flag END#######');"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apihost}}/FeatureFlags/GetFeatureFlag?id={{featureFlagId}}",
							"host": [
								"{{apihost}}"
							],
							"path": [
								"FeatureFlags",
								"GetFeatureFlag"
							],
							"query": [
								{
									"key": "id",
									"value": "{{featureFlagId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Feature Flag",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('#########Create feature flag STARTED#######');\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"});\r",
									"\r",
									"console.log('#########Create feature flag END#######');"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"{{featureFlagId}}\",\r\n  \"environmentId\": {{environmentId}},\r\n  \"objectType\": \"FeatureFlag\",\r\n  \"ff\": {\r\n    \"id\": \"{{featureFlagId}}\",\r\n    \"name\": \"{{featureFlagName}}\",\r\n    \"keyName\": \"{{featureFlagKeyName}}\",\r\n    \"environmentId\": {{environmentId}},\r\n\t\"status\": \"Enabled\",\r\n    \"defaultRulePercentageRollouts\": [\r\n      {\r\n        \"rolloutPercentage\": [0, 0.4],\r\n        \"valueOption\": {\r\n          \"localId\": 0,\r\n          \"displayOrder\": 0,\r\n          \"variationValue\": \"Value0\"\r\n        }\r\n      },\r\n\t  {\r\n        \"rolloutPercentage\": [0.4, 0.55],\r\n        \"valueOption\": {\r\n          \"localId\": 1,\r\n          \"displayOrder\": 1,\r\n          \"variationValue\": \"Value1\"\r\n        }\r\n      },\r\n\t  {\r\n        \"rolloutPercentage\": [0.55, 1],\r\n        \"valueOption\": {\r\n          \"localId\": 2,\r\n          \"displayOrder\": 2,\r\n          \"variationValue\": \"Value2\"\r\n        }\r\n      }\r\n    ],\r\n    \"variationOptionWhenDisabled\": {\r\n        \"localId\": 3,\r\n        \"displayOrder\": 3,\r\n        \"variationValue\": \"Value3\"\r\n\t}\r\n  },\r\n  \"ffp\": [\r\n  ],\r\n  \"fftuwmtr\": [\r\n    {\r\n      \"RuleId\": \"f52e9c23-b83c-40f7-82cc-c98ccc3eb586\",\r\n\t  \"RuleName\": \"rule0\",\r\n\t  \"RuleJsonContent\": [\r\n\t    {\r\n\t\t  \"property\": \"Property100\",\r\n\t\t  \"operation\": \"IsOneOf\",\r\n\t\t  \"value\": \"[\\\"123321\\\",\\\"456789\\\"]\"\r\n\t\t}\r\n\t  ],\r\n      \"valueOptionsVariationRuleValues\": [\r\n        {\r\n          \"rolloutPercentage\": [0, 0.2],\r\n          \"valueOption\": {\r\n            \"localId\": 1,\r\n            \"displayOrder\": 1,\r\n            \"variationValue\": \"Value1\"\r\n          }\r\n        },\r\n        {\r\n          \"rolloutPercentage\": [0.2, 0.3],\r\n          \"valueOption\": {\r\n            \"localId\": 2,\r\n            \"displayOrder\": 2,\r\n            \"variationValue\": \"Value2\"\r\n          }\r\n        },\r\n        {\r\n          \"rolloutPercentage\": [0.3, 1],\r\n          \"valueOption\": {\r\n            \"localId\": 3,\r\n            \"displayOrder\": 3,\r\n            \"variationValue\": \"Value3\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ],\r\n  \"targetIndividuals\": [\r\n    {\r\n      \"individuals\": [\r\n        {\r\n          \"id\": \"comiscience@outlook.com\",\r\n          \"name\": \"comiscience@outlook.com\",\r\n          \"keyId\": \"comiscience@outlook.com\",\r\n          \"email\": \"comiscience@outlook.com\"\r\n        },\r\n        {\r\n          \"id\": \"comiscience2@outlook.com\",\r\n          \"name\": \"comiscience2@outlook.com\",\r\n          \"keyId\": \"comiscience2@outlook.com\",\r\n          \"email\": \"comiscience2@outlook.com\"\r\n        },\r\n        {\r\n          \"id\": \"comiscience3@outlook.com\",\r\n          \"name\": \"comiscience3@outlook.com\",\r\n          \"keyId\": \"comiscience3@outlook.com\",\r\n          \"email\": \"comiscience3@outlook.com\"\r\n        }\r\n      ],\r\n      \"valueOption\": {\r\n        \"localId\": 0,\r\n        \"displayOrder\": 0,\r\n        \"variationValue\": \"Value0\"\r\n      }\r\n    },\r\n    {\r\n      \"individuals\": [\r\n        {\r\n          \"id\": \"comiscience4@outlook.com\",\r\n          \"name\": \"comiscience4@outlook.com\",\r\n          \"keyId\": \"comiscience4@outlook.com\",\r\n          \"email\": \"comiscience4@outlook.com\"\r\n        },\r\n        {\r\n          \"id\": \"comiscience5@outlook.com\",\r\n          \"name\": \"comiscience5@outlook.com\",\r\n          \"keyId\": \"comiscience5@outlook.com\",\r\n          \"email\": \"comiscience5@outlook.com\"\r\n        },\r\n        {\r\n          \"id\": \"comiscience6@outlook.com\",\r\n          \"name\": \"comiscience6@outlook.com\",\r\n          \"keyId\": \"comiscience6@outlook.com\",\r\n          \"email\": \"comiscience6@outlook.com\"\r\n        }\r\n      ],\r\n      \"valueOption\": {\r\n        \"localId\": 3,\r\n        \"displayOrder\": 3,\r\n        \"variationValue\": \"Value3\"\r\n      }\r\n    }\r\n  ],\r\n  \"variationOptions\": [\r\n    {\r\n      \"localId\": 0,\r\n      \"displayOrder\": 0,\r\n      \"variationValue\": \"Value0\"\r\n    },\r\n    {\r\n      \"localId\": 1,\r\n      \"displayOrder\": 1,\r\n      \"variationValue\": \"Value1\"\r\n    },\r\n    {\r\n      \"localId\": 2,\r\n      \"displayOrder\": 2,\r\n      \"variationValue\": \"Value2\"\r\n    },\r\n    {\r\n      \"localId\": 3,\r\n      \"displayOrder\": 3,\r\n      \"variationValue\": \"Value3\"\r\n    }\r\n  ],\r\n  \"isMultiOptionMode\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apihost}}/FeatureFlags/UpdateFeatureFlag",
							"host": [
								"{{apihost}}"
							],
							"path": [
								"FeatureFlags",
								"UpdateFeatureFlag"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Feature Flag For Update Validation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('#########Get feature flag for validation STARTED#######');\r",
									"\r",
									"\r",
									"\r",
									"var jsonData = JSON.parse(responseBody);\r",
									"console.log(jsonData);\r",
									"\r",
									"pm.collectionVariables.set(\"featureFlagName\", jsonData.ff.name);\r",
									"pm.collectionVariables.set(\"featureFlagKeyName\", jsonData.ff.keyName);\r",
									"\r",
									"pm.test(\"Random validation\", function () {\r",
									"    var ff = JSON.parse(responseBody);\r",
									"    var rp = ff.ff.defaultRulePercentageRollouts[0].rolloutPercentage;\r",
									"    pm.expect(rp[1]).to.be.eq(0.4);\r",
									"});\r",
									"\r",
									"console.log('#########Create feature flag for validation END#######');"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apihost}}/FeatureFlags/GetFeatureFlag?id={{featureFlagId}}",
							"host": [
								"{{apihost}}"
							],
							"path": [
								"FeatureFlags",
								"GetFeatureFlag"
							],
							"query": [
								{
									"key": "id",
									"value": "{{featureFlagId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Multi Option Varation",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log('#########Get Multi Option Varation STARTED#######');\r",
									"\r",
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
									"\r",
									"    pm.expect(pm.response.data.localId).to.be.eq(0);\r",
									"    pm.expect(pm.response.data.variationValue).to.be.eq(\"Value0\");\r",
									"});\r",
									"\r",
									"console.log('#########Get Multi Option Varation END#######');\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"featureFlagKeyName\": \"{{featureFlagKeyName}}\",\r\n  \"environmentSecret\": \"{{environmentSecret}}\",\r\n  \"ffUserName\": \"comiscience@outlook.com\",\r\n  \"ffUserEmail\": \"comiscience@outlook.com\",\r\n  \"ffUserKeyId\": \"comiscience@outlook.com\",\r\n  \"ffUserCustomizedProperties\": [\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{apihost}}/FeatureFlags/CreateFeatureFlag",
							"host": [
								"{{apihost}}"
							],
							"path": [
								"FeatureFlags",
								"CreateFeatureFlag"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.collectionVariables.set(\"environmentId\", 4);",
							"pm.collectionVariables.set(\"projectId\", 2);",
							"pm.collectionVariables.set(\"organizationId\", 4);",
							"",
							"pm.collectionVariables.set(\"organizationId\", 4);",
							"",
							"pm.collectionVariables.set(\"environmentSecret\", \"ZDc4LWQyYmItNCUyMDIxMDYwNjAxMjA1Nl9fLTFfXy0xX18wX19kZWZhdWx0X2QzYWJm\")"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "variation check test",
			"item": []
		},
		{
			"name": "Authentification",
			"item": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "apihost",
			"value": "http://localhost:5001"
		},
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "environmentId",
			"value": ""
		},
		{
			"key": "projectId",
			"value": ""
		},
		{
			"key": "organizationId",
			"value": ""
		},
		{
			"key": "featureFlagId",
			"value": ""
		},
		{
			"key": "featureFlag",
			"value": ""
		},
		{
			"key": "featureFlagName",
			"value": ""
		},
		{
			"key": "featureFlagKeyName",
			"value": ""
		}
	]
}