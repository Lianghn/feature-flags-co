# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: 
  condition: succeeded()
  jobs:
    - job: DeployKubernetes
      displayName: Deploy kubernetes-adminwebapis
      steps:
      - task: AzureCLI@2
        displayName: kubernetes-adminportal
        inputs:
          azureSubscription: feature-flags-dev
          scriptType: 'bash'
          scriptLocation: 'inlineScript'
          workingDirectory: $(System.DefaultWorkingDirectory)
          addSpnToEnvironment: true
          inlineScript: |
            az login --service-principal -u ${servicePrincipalId} -p ${servicePrincipalKey} --tenant ${tenantId}
            az aks get-credentials --resource-group feature-flags-cn --name aks-cluster1
            kubectl apply -f kubernetes-adminportal-appgw.yaml

    
    - job: DeployAzureResources
      dependsOn: DeployKubernetes
      displayName: 'Deploy Resources'
      steps:
        - task: NodeTool@0
          inputs:
            versionSpec: '10.x'
          displayName: 'Install Node.js'

        - script: |
            cd '$(System.DefaultWorkingDirectory)'
            npm install -g @angular/cli
            npm install
            ng build --prod
          displayName: 'npm install and build'

        - task: DockerInstaller@0
          inputs:
            dockerVersion: '17.09.0-ce'


        - task: Docker@2
          displayName: 'Docker Build&Push'
          inputs:
            containerRegistry: 'agiletoggle'
            repository: 'adminportal'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'

        - task: KubectlInstaller@0
          inputs:
            kubectlVersion: 'latest'

        - task: AzureCLI@2
          displayName: Apply to Kubernetes
          inputs:
            azureSubscription: feature-flags-dev
            scriptType: 'bash'
            scriptLocation: 'inlineScript'
            addSpnToEnvironment: true
            inlineScript: |
              az login --service-principal -u ${servicePrincipalId} -p ${servicePrincipalKey} --tenant ${tenantId}
              az aks get-credentials --resource-group feature-flags-cn --name aks-cluster1
              kubectl set image deployment adminportal adminportal=agiletoggle.azurecr.io/adminportal:$(Build.BuildId)

